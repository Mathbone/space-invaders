using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Threading;

namespace BrandonWilsonSpaceInvaders
{
    /*********************************************
     * Brandon Wilson 04/18
     * 
     * ******************************************/
    public partial class MainWindow : Form
    {
        GameMaster gm;
        Graphics g;
        System.Diagnostics.Stopwatch fpsTimer = new System.Diagnostics.Stopwatch();
        int fpsSetting = 33;
        int baseline;
        int laserTimer = 0;
        /*********************************************
         * Brandon Wilson 04/18
         * Autogenerated function
         * ******************************************/
        public MainWindow()
        {
            InitializeComponent();
        }
        /*********************************************
         * Brandon Wilson 04/18
         * Performs most initialization tasks for the game.
         * ******************************************/
        private void MainWindow_Load(object sender, EventArgs e)
        {
            this.WindowState = FormWindowState.Maximized;
            baseline = this.Height * 4 / 5;
            g = this.CreateGraphics();
            gm = new GameMaster(g);
            gm.addThing(new PlayerCannon(3,this.Width/2,baseline,70,30,this.Width,this.Height,Color.Red,g));
            gm.draw();
        }
        /*********************************************
         * Brandon Wilson 04/18
         * unused auto generated function.
         * ******************************************/
        private void MainWindow_MouseMove(object sender, MouseEventArgs e)
        {
            
        }
        /*********************************************
         * Brandon Wilson 04/18
         * This is the main game loop, with the call to this.invalidate() at the end forcing
         * the screen to redraw, and thus re-execute all the code.
         * ******************************************/
        private void MainWindow_Paint(object sender, PaintEventArgs e)
        {
            fpsTimer.Start();
            GameMaster.canvas = e.Graphics;
            if (gm.isEveryEnemyDefeated())
            {
                if (GameMaster.getLevel() == 0)
                    MessageBox.Show("Welcome to Space Invaders.\r\n Play new game?");
                else
                    MessageBox.Show("Level Defeated. \r\n Continue?");
                gm.removeProjectiles();
                gm.generateEnemies(this);
            }
            if (gm.isEdgeReached(this))
                gm.downAndReverse();
            gm.draw();
            gm.update();
            gm.detectCollision();
            fpsTimer.Stop();
            if (fpsTimer.ElapsedMilliseconds < fpsSetting)
            {
                Application.DoEvents();
                Thread.Sleep(fpsSetting - (int)fpsTimer.ElapsedMilliseconds);
                Application.DoEvents();
            }
            laserTimer--;
            fpsTimer.Reset();
            if (gm.gameIsLost(baseline))
            {
                MessageBox.Show("You have lost and Space Invaders have overwhelmed the Earth.");
                gm.resetGame();
            }
            this.Invalidate();
        }
        /*********************************************
         * Brandon Wilson 04/18
         * allows mouse-based firing.
         * ******************************************/
        private void MainWindow_MouseDown(object sender, MouseEventArgs e)
        {
            if (laserTimer <= 0)
            {
                gm.addThing(new PlayerProjectile(5, e.X - 3, baseline, 5, 20, this.Width, this.Height, Color.Green, g));
                laserTimer = 10;
            }
        }
    }
}
